---
layout: verovio
verovio-light: true
title: Verovio â€“ Features
active: how
how-active: how-features
features:
    - id: "shared_menu"
      menu: "Shared"
    - id: "tempi-directives"
      name: "Tempi and directives"
    - id: "coloring"
      name: "Colors"
    - id: "cmn_menu"
      menu: "Common Music Notation"
    - id: "scoredef"
      name: "Score and barlines"
    - id: "score-changes"
      name: "Score changes"
    - id: "chords"
      name: "Chords"
    - id: "gracenotes"
      name: "Grace notes"
    - id: "beams"
      name: "Beam breaks"
    - id: "cross-staff"
      name: "Cross-staff notation"
    - id: "ties-slurs"
      name: "Ties and slurs"
    - id: "dynams-hairpins"
      name: "Dynamics and hairpins"
    - id: "tuplets"
      name: "Tuplets"
    - id: "artic"
      name: "Articulations"
    - id: "tremolos"
      name: "Tremolos"
    - id: "fermatas"
      name: "Fermatas"
    - id: "octave-shift"
      name: "Octave shift"
    - id: "piano-pedals"
      name: "Piano pedals"
    - id: "repeats"
      name: "Repeats and endings"
    - id: "mensural_menu"
      menu: "Mensural notation"
    - id: "mensural"
      name: "Mensural notation"
    - id: "cmn_ornam"
      menu: "Common Music Notation Ornaments"
    - id: "mordents"
      name: "Mordents"
    - id: "trills"
      name: "Trills"
    - id: "turns"
      name: "Turns"
    - id: "app_menu"
      menu: "Critical apparatus"
    - id: "app"
      name: "Apps and readings"
    - id: "editorial_menu"
      menu: "Editorial markup"
    - id: "editorial"
      name: "Editorial and choice markup"
    - id: "harmony_menu"
      menu: "Harmony"
    - id: "harmony"
      name: "Indications of harmony"
    - id: "vocaltext_menu"
      menu: "Vocal text"
    - id: "lyrics"
      name: "Lyrics"
version-footer: true
---

<div class="row">
    <div class="col-md-3 sidebar-offcanvas" id="sidebar" role="navigation">
        <div class="panel panel-default">
            {% include how-sidebar.html %}
        </div>
        <div class="panel panel-default">
            <div class="list-group sublist-group">
                {% for f in page.features %}
                    {% if f.menu %}
                        <span class="list-group-item list-group-item-menu"><i>{{ f.menu }}</i></span>
                    {% else %}
                        <a id="link-{{ f.id }}" class="list-group-item" href="{{ site.baseurl }}/features.xhtml?id={{ f.id }}">{{ f.name }}</a>
                    {% endif %}
                {% endfor %}
            </div>
        </div>
    </div>

    <div class="col-md-9">
        <div class="panel-body">
            <h3>Features</h3>
            <p>
                This section shows some of the features of Verovio. All the examples are rendered dynamically in the web-browser with its <a href="{{ site.baseurl }}/javascript.xhtml">JavaScript toolkit</a> version.
            </p>
            <p>
                The order of the provided example features is related to the corresponding modules of the <a href="http://music-encoding.org/documentation/3.0.0/chapters/" target="_blank">MEI guidelines</a>.
            </p>

            <div id="feature">
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">
//<![CDATA[

    var zoom = 40;
    var pageHeight = 2970;
    var pageWidth = 2100;
    var adjustPageHeight = 1;
    var border = 25;
    var spacingStaff = 4;
    var appXPathQuery = [];
    var choiceXPathQuery = [];
    var noLayout = 0;
    var vrvToolkit = new verovio.toolkit();

    function load_data(data, output_div) {
        options = {
                    pageHeight: pageHeight,
                    pageWidth: pageWidth,
                    adjustPageHeight: adjustPageHeight,
                    border: border,
                    spacingStaff: spacingStaff,
                    appXPathQuery: appXPathQuery,
                    choiceXPathQuery: choiceXPathQuery,
                    noLayout: noLayout,
                    scale: zoom,
                    noHeader: true
                };
        console.log(options);
        var svg = vrvToolkit.renderData( data, options );
        output_div.html(svg);
    }

    function getParameterByName(name) {
        var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
    }

    $( document ).ready(function() {

        var id = getParameterByName("id");
        if (!id) {
            id = "{{ page.features[1].id }}";
        }
        var file = "features/" + id + ".html";
        // load the file
        $( "#feature" ).load( file, function() {
              $(".toggle_code").click(function(){
                  $( "#" + $(this).attr("id") + "-xml" ).toggle();
                    $("span", this).toggleClass("glyphicon-eye-open glyphicon-eye-close");
              });

        });
        // activate the link menu
        $( "#link-" + id ).addClass( "active" );

    });
//]]>
</script>
